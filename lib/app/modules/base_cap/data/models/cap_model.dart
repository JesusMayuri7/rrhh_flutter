import 'dart:convert';

import '../../domain/entities/base_cap_entity.dart';

List<CapModel> baseCapModelFromJson(String str) {
  List<dynamic> baseCapJson = json.decode(str);
  return List<CapModel>.from(baseCapJson.map((x) {
    return CapModel.fromJson(x);
  }));
}

String baseCapModelToJson(List<CapModel> data) =>
    json.encode(List<dynamic>.from(data.map((x) => x.toJson())));

class CapModel extends BaseCapEntity {
  CapModel({
    required int id,
    required int anio,
    required String presupuesto,
    required int orgAreaId,
    required String descArea,
    required int idpap,
    required int idcap,
    required int pdId,
    required String plaza,
    required String plazaOld,
    required String estadoActual,
    required String estadoOpp,
    required String estadoPap,
    required String estadoAir,
    required String tipoIngreso,
    required String feIngreso,
    required String tipoSalida,
    required String feSalida,
    required String finLicencia,
    required String dni,
    required String nombres,
    required String modalidad,
    required double asigFam,
    required double uniforme,
    required double vale,
    required String sede,
    required String fuenteBase,
    required String fuentePap,
    required String feNac,
    required String cargocap,
    required String cargoPap,
    required int metaId,
    required String meta,
    required String finalidad,
    required String producto,
    required String nivelO,
    required String descNivel,
    required int idnivel,
    required int idescala,
    required String descEscala,
    required String tipoEscala,
    required String codigoPlaza,
    required String detalle,
    required int capPvnId,
    required String ppto2021,
    required int epsAporta,
    required double montoBasico,
    required double incremento,
    required double montoMensual,
    required double asigFamiliarAir,
    required double montoEscalaAnterior,
    required double montoEscala,
    required double porcentajeEscalaAnterior,
    required double porcentajeEscala,
    required double porcentajeEscalaNext,
    required double montoEscalaNext,
  }) : super(
            id: id,
            anio: anio,
            presupuesto: presupuesto,
            orgAreaId: orgAreaId,
            descArea: descArea,
            idpap: idpap,
            idcap: idcap,
            pdId: pdId,
            plaza: plaza,
            plazaOld: plazaOld,
            estadoActual: estadoActual,
            estadoOpp: estadoOpp,
            estadoPap: estadoPap,
            estadoAir: estadoAir,
            tipoIngreso: tipoIngreso,
            feIngreso: feIngreso,
            tipoSalida: tipoSalida,
            feSalida: feSalida,
            finLicencia: finLicencia,
            dni: dni,
            nombres: nombres,
            modalidad: modalidad,
            asigFamiliarAir: asigFamiliarAir,
            uniforme: uniforme,
            vale: vale,
            sede: sede,
            fuenteBase: fuenteBase,
            fuentePap: fuentePap,
            feNac: feNac,
            cargocap: cargocap,
            cargoPap: cargoPap,
            metaId: metaId,
            meta: meta,
            finalidad: finalidad,
            producto: producto,
            nivelO: nivelO,
            descNivel: descNivel,
            idnivel: idnivel,
            idescala: idescala,
            descEscala: descEscala,
            tipoEscala: tipoEscala,
            codigoPlaza: codigoPlaza,
            detalle: detalle,
            capPvnId: capPvnId,
            montoEscalaNext: montoEscalaNext,
            incremento: incremento,
            montoMensual: montoMensual,
            montoEscalaAnterior: montoEscalaAnterior,
            porcentajeEscalaAnterior:porcentajeEscalaAnterior,
            porcentajeEscala:porcentajeEscala,
            porcentajeEscalaNext:porcentajeEscalaNext,
            ppto2021: ppto2021,
            epsAporta: epsAporta,
            montoBasico: montoBasico,
            montoEscala: montoEscala,
            asigFam: asigFam);

  factory CapModel.fromJson(Map<String, dynamic> json) => CapModel(
        id: json["id"],
        anio: json["anio"] ?? 0,
        presupuesto: json["presupuesto"] ?? '',
        orgAreaId: json["org_area_id"] ?? 0,
        descArea: json["desc_area"] ?? '',
        idpap: json["idpap"] ?? 0,
        idcap: json["idcap"] ?? 0,
        pdId: json["pd_id"] ?? 0,
        plaza: json["plaza"] ?? '',
        plazaOld: json["plaza_old"] ?? '',
        estadoActual: json["estado_actual"] ?? '',
        estadoOpp: json["estado_opp"] ?? '',
        estadoPap: json["estado_pap"] ?? '',
        estadoAir: json["estado_air"] ?? '',
        tipoIngreso: json["tipo_ingreso"] ?? '',
        feIngreso: json["fe_ingreso"] ?? '',
        tipoSalida: json["tipo_salida"] ?? '',
        feSalida: json["fe_salida"] ?? '',
        finLicencia: json["fin_licencia"] ?? '',
        dni: json["dni"] ?? '',
        nombres: json["nombres"] ?? '',
        modalidad: json["modalidad"] ?? '',
        asigFamiliarAir: double.parse(json["asig_familiar_air"] ?? '0'),
        uniforme: json["uniforme"].toDouble(),
        vale: json["vale"].toDouble(),
        sede: json["sede"] ?? '',
        fuenteBase: json["fuente_base"] ?? '',
        fuentePap: json["fuente_pap"] ?? '',
        feNac: json["fe_nac"] ?? '',
        cargocap: json["cargocap"] ?? '',
        cargoPap: json["cargo_pap"] ?? '',
        metaId: json["meta_id"] ?? 0,
        meta: json["meta"] ?? '',
        finalidad: json["finalidad"] ?? '',
        producto: json["producto"] ?? '',
        nivelO: json["nivelO"] ?? '',
        descNivel: json["desc_nivel"] ?? '',
        idnivel: json["idnivel"] ?? 0,
        idescala: json["idescala"] ?? 0,
        descEscala: json["desc_escala"] ?? '',
        tipoEscala: json["tipo_escala"] ?? '',
        codigoPlaza: json["codigo_plaza"] ?? '',
        detalle: json["detalle"] ?? '',
        capPvnId: json["cap_pvn_id"] ?? 0,
        ppto2021: json["ppto_2021"] ?? '',
        epsAporta: json['eps_aporta'] ?? 0,
        montoBasico: double.parse(json["monto_basico"] ?? '0'),
        incremento: double.parse(json["incremento"] ?? '0'),
        montoMensual: double.parse(json['monto_mensual'] ?? '0'),
        montoEscala: double.parse('0'),
        montoEscalaNext: double.parse('0'),
        montoEscalaAnterior: double.parse('0'),
        porcentajeEscalaAnterior: double.parse(json["porcentaje_escala_anterior"] ?? '0'),
        porcentajeEscala: double.parse(json["porcentaje_escala"] ?? '0'),
        porcentajeEscalaNext: double.parse(json["porcentaje_escala_next"] ?? '0'),
        asigFam: double.parse(json["asig_fam"] ?? '0'),
      );

  Map<String, dynamic> toJson() => {
        "id": id,
        "anio": anio,
        "presupuesto": presupuesto,
        "org_area_id": orgAreaId,
        "desc_area": descArea,
        "idpap": idpap,
        "idcap": idcap,
        "pd_id": pdId,
        "plaza": plaza,
        "plaza_old": plazaOld,
        "estado_actual": estadoActual,
        "estado_opp": estadoOpp,
        "estado_pap": estadoPap,
        "estado_air": estadoAir,
        "tipo_ingreso": tipoIngreso,
        "fe_ingreso": feIngreso,
        "tipo_salida": tipoSalida,
        "fe_salida": feSalida,
        "fin_licencia": finLicencia,
        "dni": dni,
        "nombres": nombres,
        "modalidad": modalidad,
        "asig_familiar_air": asigFamiliarAir,
        "monto_escala": montoEscala,
        "monto_basico": montoBasico,
        "asig_fam": asigFam,
        "uniforme": uniforme,
        "vale": vale,
        "sede": sede,
        "fuente_base": fuenteBase,
        "fuente_pap": fuentePap,
        "fe_nac": feNac,
        "cargocap": cargocap,
        "cargo_pap": cargoPap,
        "meta_id": metaId,
        "meta": meta,
        "finalidad": finalidad,
        "producto": producto,
        "nivelO": nivelO,
        "desc_nivel": descNivel,
        "idnivel": idnivel,
        "idescala": idescala,
        "desc_escala": descEscala,
        "tipo_escala": tipoEscala,
        "codigo_plaza": codigoPlaza,
        "detalle": detalle,
        "cap_pvn_id": capPvnId,
        "monto_escala_anterior": montoEscalaAnterior,
        "monto_escala_next": montoEscalaNext,
        "incremento":incremento,
        "monto_mensual":montoMensual,
        "porcentaje_escala_anterior": porcentajeEscalaAnterior,
        "porcentaje_escala": porcentajeEscala,
        "porcentaje_escala_next": porcentajeEscalaNext,
        "ppto_2021": ppto2021,
        'eps_aporta': epsAporta
      };
}
