// To parse this JSON data, do
//
//     final practicanteModel = practicanteModelFromJson(jsonString);

import 'dart:convert';

import 'package:rrhh_clean/app/modules/base_prac/domain/practicante_entity.dart';

List<PracticanteModel> practicanteModelFromJson(String str) =>
    List<PracticanteModel>.from(
        json.decode(str).map((x) => PracticanteModel.fromJson(x)));

String practicanteModelToJson(List<PracticanteModel> data) =>
    json.encode(List<dynamic>.from(data.map((x) => x.toJson())));

class PracticanteModel extends PracticanteEntity {
  PracticanteModel(
      {required int anio,
      required String regimen,
      required String cargoSctrPension,
      required String plaza,
      required String estadoActual,
      required String tramite,
      required String nroTramite,
      required String dependencia,
      required String fechaAlta,
      required String fechaBaja,
      required String remuneraciones,
      required int id,
      required String codigoPlaza,
      required int orgUnidadId,
      required String descUnidad,
      required int orgAreaId,
      required String descArea,
      required String descOrgano,
      required String sede,
      required String meta,
      required String finalidad,
      required int metaId,
      required String cargo,
      required String cargo2,
      required String tipo2,
      required num montoBase,
      required String nombres,
      required int fuenteId,
      required String detalle,
      required String presupuesto,
      required String fuenteAir,
      required String fuenteBase,
      required dynamic metaAir,
      required dynamic metaSiga,
      required String dni,
      required String dniAir,
      required String ingresoAir,
      required String nuDociden,
      required String idContrato,
      required String feContrato,
      required String feIngreso,
      required String nuContrato,
      required String feCese,
      required String unidadSiga,
      required String estado,
      required String estadoPap,
      required String estadoOpp,
      required String estados,
      required String estadoAir,
      required double montoAir,
      required double montoSiga,
      required String lugar,
      required String nombresAir,
      required dynamic nombresSiga,
      required String fechaFinVigenciaCas,
      required String updatedAt,
      required String convoca,
      required String convocatoria,
      required String inscripcion,
      required String cierre,
      required String tipo,
      required double subvencion,
      required String dsJerarquia,
      required double sctrPension,
      required String fuenteSiga,
      required String dniSiga,
      required String modalidad})
      : super(
            id: id,
            anio: anio,
            regimen: regimen,
            cargoSctrPension: cargoSctrPension,
            plaza: plaza,
            estadoActual: estadoActual,
            tramite: tramite,
            nroTramite: nroTramite,
            dependencia: dependencia,
            fechaAlta: fechaAlta,
            fechaBaja: fechaBaja,
            remuneraciones: remuneraciones,
            codigoPlaza: codigoPlaza,
            orgUnidadId: orgUnidadId,
            descUnidad: descUnidad,
            orgAreaId: orgAreaId,
            descArea: descArea,
            descOrgano: descOrgano,
            sede: sede,
            meta: meta,
            finalidad: finalidad,
            metaId: metaId,
            cargo: cargo,
            cargo2: cargo2,
            tipo2: tipo2,
            montoBase: montoBase,
            nombres: nombres,
            fuenteId: fuenteId,
            detalle: detalle,
            presupuesto: presupuesto,
            fuenteAir: fuenteAir,
            fuenteBase: fuenteBase,
            metaAir: metaAir,
            metaSiga: metaSiga,
            dni: dni,
            dniAir: dniAir,
            ingresoAir: ingresoAir,
            nuDociden: nuDociden,
            idContrato: idContrato,
            feContrato: feContrato,
            feIngreso: feIngreso,
            nuContrato: nuContrato,
            feCese: feCese,
            unidadSiga: unidadSiga,
            estado: estado,
            estadoPap: estadoPap,
            estadoOpp: estadoOpp,
            estados: estados,
            estadoAir: estadoAir,
            montoAir: montoAir,
            montoSiga: montoSiga,
            lugar: lugar,
            nombresAir: nombresAir,
            nombresSiga: nombresSiga,
            fechaFinVigenciaCas: fechaFinVigenciaCas,
            updatedAt: updatedAt,
            convoca: convoca,
            convocatoria: convocatoria,
            inscripcion: inscripcion,
            cierre: cierre,
            tipo: tipo,
            subvencion: subvencion,
            dsJerarquia: dsJerarquia,
            sctrPension: sctrPension,
            fuenteSiga: fuenteSiga,
            dniSiga: dniSiga,
            modalidad: modalidad);

  factory PracticanteModel.fromJson(Map<String, dynamic> json) =>
      PracticanteModel(
        anio: json["anio"],
        regimen: json["regimen"] ?? '',
        cargoSctrPension: json["cargo_sctr_pension"] ?? '',
        plaza: json["plaza"] ?? '',
        estadoActual: json["estado_actual"] ?? '',
        tramite: json["tramite"] ?? '',
        nroTramite: json["nro_tramite"] ?? '',
        dependencia: json["dependencia"] ?? '',
        fechaAlta: json["fecha_alta"] ?? '',
        fechaBaja: json["fecha_baja"] ?? '',
        remuneraciones: json["remuneraciones"] ?? '',
        id: json["id"] ?? 0,
        codigoPlaza: json["codigo_plaza"] ?? '',
        orgUnidadId: json["org_unidad_id"] ?? 0,
        descUnidad: json["desc_unidad"] ?? '',
        orgAreaId: json["org_area_id"] ?? 0,
        descArea: json["desc_area"] ?? '',
        descOrgano: json["desc_organo"] ?? '',
        sede: json["sede"] ?? '',
        meta: json["meta"] ?? '',
        finalidad: json["finalidad"] ?? '',
        metaId: json["meta_id"] ?? 0,
        cargo: json["cargo"] ?? '',
        cargo2: json["cargo2"] ?? '',
        tipo2: json["tipo2"] ?? '',
        montoBase: (json["monto_base"] ?? 0).toDouble(),
        nombres: json["nombres"] ?? '',
        fuenteId: json["fuente_id"] ?? 0,
        detalle: json["detalle"] ?? '',
        presupuesto: json["presupuesto"] ?? '',
        fuenteAir: json["fuente_air"] ?? '',
        fuenteBase: json["fuente_base"] ?? '',
        metaAir: json["meta_air"] ?? '',
        metaSiga: json["meta_siga"] ?? '',
        dni: json["dni"] ?? '',
        dniAir: json["dni_air"] ?? '',
        ingresoAir: json["ingreso_air"] ?? '',
        nuDociden: json["nu_dociden"] ?? '',
        idContrato: json["id_contrato"] ?? '',
        feContrato: json["fe_contrato"] ?? '',
        feIngreso: json["fe_ingreso"] ?? '',
        nuContrato: json["nu_contrato"] ?? '',
        feCese: json["fe_cese"] ?? '',
        unidadSiga: json["unidad_siga"] ?? '',
        estado: json["estado"] ?? '',
        estadoPap: json["estado_pap"] ?? '',
        estadoOpp: json["estado_opp"] ?? '',
        estados: json["estados"] ?? '',
        estadoAir: json["estado_air"] ?? '',
        montoAir: (json["monto_air"] ?? 0).toDouble(),
        montoSiga: (json["monto_siga"] ?? 0).toDouble(),
        lugar: json["lugar"] ?? '',
        nombresAir: json["nombres_air"] ?? '',
        nombresSiga: json["nombres_siga"] ?? '',
        fechaFinVigenciaCas: json["fecha_fin_vigencia_cas"] ?? '',
        updatedAt: json["updated_at"] ?? '',
        convoca: json["convoca"] ?? '',
        convocatoria: json["convocatoria"] ?? '',
        inscripcion: json["inscripcion"] ?? '',
        cierre: json["cierre"] ?? '',
        tipo: json["tipo"] ?? '',
        subvencion: (json["subvencion"] ?? 0).toDouble(),
        dsJerarquia: json["ds_jerarquia"] ?? '',
        sctrPension: (json["sctr_pension"] ?? 0).toDouble(),
        fuenteSiga: json["fuente_siga"] ?? '',
        dniSiga: json["dni_siga"] ?? '',
        modalidad: json["modalidad"] ?? '',
      );

  Map<String, dynamic> toJson() => {
        "anio": anio,
        "regimen": regimen,
        "cargo_sctr_pension": cargoSctrPension,
        "plaza": plaza,
        "estado_actual": estadoActual,
        "tramite": tramite,
        "nro_tramite": nroTramite,
        "dependencia": dependencia,
        "fecha_alta": fechaAlta,
        "fecha_baja": fechaBaja,
        "remuneraciones": remuneraciones,
        "id": id,
        "codigo_plaza": codigoPlaza,
        "org_unidad_id": orgUnidadId,
        "desc_unidad": descUnidad,
        "org_area_id": orgAreaId,
        "desc_area": descArea,
        "desc_organo": descOrgano,
        "sede": sede,
        "meta": meta,
        "finalidad": finalidad,
        "meta_id": metaId,
        "cargo": cargo,
        "cargo2": cargo2,
        "tipo2": tipo2,
        "monto_base": montoBase,
        "nombres": nombres,
        "fuente_id": fuenteId,
        "detalle": detalle,
        "presupuesto": presupuesto,
        "fuente_air": fuenteAir,
        "fuente_base": fuenteBase,
        "meta_air": metaAir,
        "meta_siga": metaSiga,
        "dni": dni,
        "dni_air": dniAir,
        "ingreso_air": ingresoAir,
        "nu_dociden": nuDociden,
        "id_contrato": idContrato,
        "fe_contrato": feContrato,
        "fe_ingreso": feIngreso,
        "nu_contrato": nuContrato,
        "fe_cese": feCese,
        "unidad_siga": unidadSiga,
        "estado": estado,
        "estado_pap": estadoPap,
        "estado_opp": estadoOpp,
        "estados": estados,
        "estado_air": estadoAir,
        "monto_air": montoAir,
        "monto_siga": montoSiga,
        "lugar": lugar,
        "nombres_air": nombresAir,
        "nombres_siga": nombresSiga,
        "fecha_fin_vigencia_cas": fechaFinVigenciaCas,
        "updated_at": updatedAt,
        "convoca": convoca,
        "convocatoria": convocatoria,
        "inscripcion": inscripcion,
        "cierre": cierre,
        "tipo": tipo,
        "subvencion": subvencion,
        "ds_jerarquia": dsJerarquia,
        "sctr_pension": sctrPension,
        "fuente_siga": fuenteSiga,
        "dni_siga": dniSiga,
        "modalidad": modalidad,
      };
}
